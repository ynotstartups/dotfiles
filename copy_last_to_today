#!/usr/bin/env python3
"""
copy last edited file to format `date.extension` e.g. 08-Aug-23.md
"""

import glob
import os
from datetime import date
import datetime
import shutil

def get_next_week_day(day_now):
    if day_now.isoweekday()== 5:
        day_now += datetime.timedelta(days=3)
    elif day_now.isoweekday()== 6:
        day_now += datetime.timedelta(days=2)
    else:
        day_now += datetime.timedelta(days=1)
    return day_now

list_directory = glob.glob('./*')
list_of_files = [f for f in list_directory if os.path.isfile(f)]
latest_file = max(list_of_files, key=os.path.getmtime)

_, file_extension = os.path.splitext(latest_file)

today_date_string = date.today().strftime('%d-%b-%y')  # e.g. 10-Aug-23
next_date_string = get_next_week_day(date.today()).strftime('%d-%b-%y')

today_date_filename = os.path.join(".", f"{today_date_string}{file_extension}")
next_date_filename = os.path.join(".", f"{next_date_string}{file_extension}")

if not os.path.exists(today_date_filename):
    # today's filename doesn't exist, just copy to today's filename
    print(f"copying {latest_file} to {today_date_filename}")
    shutil.copy(latest_file, today_date_filename)
elif os.path.exists(today_date_filename) and not os.path.exists(next_date_filename):
    # today's filename exists, ask if user wants to copy to next business day's
    input_text = f"{today_date_filename}\nDo you want to copy today's to next business date {next_date_filename}?\nInput y for Yes, anything else is No: "
    user_input = input(input_text)

    if user_input == "y":
        print(f"copying {today_date_filename} to {next_date_filename}")
        shutil.copy(today_date_filename, next_date_filename)
    else:
        print(f"Exiting! destination file {today_date_filename} already exists")
        exit(1)
else:
    # Both today's and next business day's filename exists already
    print(f"Exiting! {today_date_filename} and {next_date_filename} already exists")
