{"debugging/pdb for dockerised django": "84096027bfa97039cc6bce7f6fe5a9db", "debug in ssh": "e6e38824fddc91a2266dfabb0afeb905", "README": "7a32b0f3f02c17c481d8fd44a40f3354", "cloud native at speed with confidence": "2cad5dfa02023ea4ca24b40f4e81aae1", "AWS cli commands": "306949f54fa04db0ad7189d54445adfa", "What is IAM?": "7d37c13ead4f68309faff34f2e9322b7", "serverless architecture": "ab13bdf1dd2e41ebb4ed6cbd2190ba65", "DynamoDB best practice": "f758e75403cfb56fb508f3713b4a9582", "AWS events videos": "4a28e9e44b3bedc1b4f176b7534a662e", "regular expression": "8c1a491fed14bb5174f94704ad0ae567", "`rg` cli options": "220c911567b8a9a02e6d5fef777ad251", "multi lines matching": "54ad10793f346835e6d6da85bad7d065", "search for different casing": "ee6e2d7490c9e287137608bdfd8a3e46", "copy `rg` result into pasteboard for PR description...": "8aa4bfd315de4b8093a698ea0d7014a0", "regular expression atoms": "9f18920a9c1ed202d9cc850b560a1376", "write": "15aa79134200fd43a1c1f8b2018a72dc", "give consistent good PR review": "3521fb147ef32f656619ee90b1946793", "best practices: behavioural": "a759565d672f525f71e57ffff3c50d42", "best practices: documentations": "9596a7b0af3461af778f3b409668c6ff", "best practices: design": "6d7a2c1895540177326211819cf07545", "best practices": "19851a87b1f0170f7cafb02f7f4cdc4a", "use `Q` & `F`": "e3d85bec9c1373edd2f60f8b998ef391", "postgres cli": "7a26f5ef4dddaf1a7bcb489670d7c0d1", "drop column": "2eebcf2f57ef4067ccc14ece41c1c8e1", "rename table": "0dd9a657ce4588a3e9a842ab3b636f2c", "save query result to a file": "1c65dc9199227de3ef3fa6dfbb48faf5", "vim9script": "322a832e418c5ab76f96289c377893cc", "terraform language": "33d870228e3379cbe2ef27911710085e", "terraform cli": "231f26588a5afbaaf487efe5f827e5f6", "find a new job: Research Stage": "ee8a93826d713d10a70bbb94ab1e44e3", "find a new job: Application Stage": "7ae7037e195db6d584c71b62a16fa145", "find a new job: Interview Stage": "9c2d8f52a645d76979b1d85fefc39b01", "designing data-intensive applications": "96040e27414f91a6ca41f234e9e645db", "use Command env to print env vars": "efb9aa5bcf3e39f9c36a0c017a02c9f6", "understanding git log": "ee6332f83b667c415e3b03eb65c807b4", "resolve DNS IP addresses in Mac": "83f88f3eb2f03e3d3de438ae91f01abc", "get file path to python source codes in iPython with `??`": "46bda5bd967480e2fd41eb45371f2d03", "open errors in quickfix": "5a0f82a0939cdf1a8a8448fc272383c9", "terminal color scheme": "14e736953e9a2c67d06a78268fade114", "how does docker use cache?": "1d31f880437347f1f6850c600ea92f1c", "`checkout` replaced by `switch` and `restore`": "e6e42c8ceadfa809fa237a1e4252bbe1", "use `reset` soft mixed hard": "4b3c4398e128a9eec400cd9b6fd55447", "don't use as pager or man page reader": "4fb7c6e85d5ccd345d712f81536045e5", "what is python wheel?": "57721a5f51bc36e10cb8ed6e3d1c04f0", "ascii encoding": "1076fbab4e30f34620b9ce9da9319335", "`gq` formatoption": "b01f5007b77844a844f60dbfeb0d8652", "`..` vs `...`": "911c2d3fbfddc2a7d52f6cc1aa25e50f", "find mapping source": "d5eca3619f8c12ec26a51dac9e8f409d", "find out default python": "649f154e566c76b65a4f80971a0603c8", "match on the second occurrence": "446fc0071fcc1a02fd11a1b3625d578b", "use command date to convert time format": "1e7a3912e84bb41fc0f9b2e8e78cd5fb", "print manual page in color": "274ad1a81d1b6dec04623710741655b2", "get `celery` ran tasks": "b3f119d3a8a9bf453e474a36abb1bf2f", "use `lpr` to print hardcopies": "2e9990074d3edb89998d8cff3b544547", "find source code in certain directories": "f20e9e5c4c1992ab696827ade352bbc4", "shell builtin commands": "71a1ca05393b9b05b7699f303d577540", "find the size of current directory": "f772af31fec76341b12d984492751d26", "Authentication vs Authorization": "23822e1eedb65c0221fbf5915832b9d6", "extract manpage table of content": "45fb8b3b3bcac0d76c9826c9d5ede223", "find the dependencies of python package": "d962455b501c38660a5426b0ee08a2db", "why is the 137 exit code?": "8a49f2f7629a9583a67093d44f2a22d8", "how `cognito` login works": "72b795ceb2aa6cf9a057bc8e2e1d8fe0", "fileobj vs string vs byte string": "0708c23f338dc71944e98a505f68b6f8", "profile performance in iPython": "77d4c6c675d432887ce72bda766d5bf8", "open vim to edit command line alt+v": "e817082a0143c85ce9ffc82563ff491f", "codebase uses lot of inheritances": "1914d5f2f975c620883747f6e3da807d", "run python in vim terminal": "7caa59500fb45137fd05ee3bb08885a6", "run black or flake8 on python code in markdown": "7560a2de879ce41eef8b42faa54352a7", "registers & macros": "6cdcb928145f29b64e425c344eaac186", "apply changes to lines match a pattern": "e3e6b52a0e6bb0c11cc7b6f892d054bf", "`vim.eval` in vim python": "29ac43acc806f0727884434e32601841", "regex look ahead / behind": "a7d85f8b50065999e2059da42d01924c", "use `GraphiQL` with django debug tool bar": "eb76c73e7169e4005852acf7daa93724", "`rebase` with fixing conflicts by always using a branch": "e9b9596c7b6dd01cf27a588dfe3c198c", "use `pdb` for debugging": "81396dff395ba4d812d6a6c5ba1344cd", "Architectures": "44f39d014a72e8fdd880efe11b43f67d", "full development cycle": "4627a4507d0de86cca155d56626c4024", "SaaS business model": "15efb425d7d88480dbf78f2ebb0aee2c", "Explain Public and Private Key Cryptography like I am 5": "aa25930601028669a5c400e4674977c0", "loading curo_sheet in psql": "2a8f08f5ece4d6eee2d15a5941df8b40", "busybox": "d7d8358e2acbbb45e55402344e8168ef", "create, extract, list a gzipped tarball": "ca5864fb60e6cfec9d51922fc6e9b27d", "set timeout in `Requests`": "d7ad2b4fd2bfe37e2a3cd21a68edf5cd", "errors in `Requests`": "04e956d03e5b654df582d0af2d96d18a", "use urllib instead `Requests`": "3cf8c6f0c2f089a4f2644c967077ff73", "use a decorator to print function calls": "c6f21f80c01bcb342dc1d4c7d04a2830", "enable iPython autoload": "49e6f67bb91ddae95a6d5581b6bba454", "things needed": "7d5a90691e9e1748a038946459268421", "think about success besides money and company name": "f2f0423d2e87ce0d36ef5811f982304e", "note about these notes": "ef0bc192488bea9e6f578c1e3f0b7fe4", "Who am I?": "9c6086bdb54a1c6e88a1d57df034adbd", "minimalism": "0bce0d410a15def5f163e11a34b4587c", "restaurants recommendations": "f197b204d18476a05dc0e3839d80cc60", "gym exercises": "527ff97d1ba927a75391b47a8941aa58", "Household maintenance": "426e81107b8222468bd0855c98dbebe8", "Use logging module": "eb407e1b2647562714b3b4085676c62b"}